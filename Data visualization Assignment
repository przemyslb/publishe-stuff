---
title: "ASSIGNMENT DATA VISUALIZATION"
author: "przemek bednarz"
date: "15/12/2019"
output: word_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(include = FALSE)
library(readr)
library(dplyr)
library(purrr)
library(ggplot2)
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(sp)

```

## R Markdown

Loading and exploring my datasets. Plus prep work.

```{r cars}
## Fix for unreadable numbers
options(scipen = 999)
#load dataset
livestock <- read.csv("~/Desktop/home folder for R/FAOSTAT_data_11-30-2019.csv")
# remove columns
livestock$Flag<- NULL
livestock$Flag.Description <- NULL
livestock$Year.Code <- NULL
livestock$Item.Code <- NULL
livestock$Element.Code <- NULL
livestock$Area.Code <- NULL
livestock$Domain <- NULL
livestock$Domain.Code <- NULL
#here I deal  with duplicated being in different measuring unit
livestock <- livestock[livestock$Element == "Production",]

#View(livestock)
#convert variables
livestock$Item <- as.character(livestock$Item)
livestock$Element <- as.character(livestock$Element)
livestock$Value <- as.numeric(livestock$Value)
livestock$Year <- as.numeric(livestock$Year)

#omit empty values
livestock <- na.omit(livestock)
unique(livestock$Item )
unique(livestock$Element )
#stats
colnames(livestock)
#nrow(livestock)
#str(livestock)
#View(livestock)

```
HISTOGRAM FOR TOTAL  LIVESTOCK PRODUCTION.
```{r pressure, echo=FALSE}
hist(histogram, breaks=5, main="With breaks=4", xlim=c(-10,100),col="red",ylim=c(0,25))+
  geom_bar(stat = 'identity',fill = 'blue')
hist(histogram)
```

world population dataset
```{r, echo=FALSE}
#-------------------------------------------------------------------
population <- read.csv("~/Desktop/world-population-by-world-regions-post-1820.csv")
#change column to numeric
population$Year <- as.numeric(population$Year)
# remove columns
population$Code <- NULL
#omit emtpy values
population <- na.omit(population)
# Rename Entity column in second dataset
colnames(population)[colnames(population)=="Entity"] <- "Area"
#colnames(population)
population$Area <- as.character(population$Area)
#View(population)
#str(population)
#unique( population$Year )
```

Filter years and plot basic plots
```{r, echo=FALSE}
#filter out years
population <- population[population$Year >= "1961",]
population <- population[population$Year <= "2017",]
population <- population[population$Year != "200",]
population
#check if only the right years were loaded
#Check if years loaded properly 
#unique(population$Year)

#total world population across the years
total_population <- population %>%
  group_by(Year) %>%
  summarize(population_sum = sum(Population))
total_population
p1 <- ggplot() + geom_line(aes(y = population_sum, x = Year),
                 data = total_population)
p1
population_uk<-population %>%
  filter(Area=="United Kingdom") 
population_uk
#total population in UK across the years
total_population_uk <- population_uk %>%
  group_by(Year) %>%
  summarize(population_sum_uk = sum(Population))
total_population_uk
total_population
p2 <- ggplot() + geom_line(aes(y = population_sum_uk, x = Year),
                 data = total_population_uk)
p2


population_germany<-population %>%
  filter(Area=="Germany") 
#population_germany
#total population in Germany across the years
total_population_germany <- population_germany %>%
  group_by(Year) %>%
  summarize(population_sum_germany = sum(Population))
#total_population_germany
#total_population
pgermany <- ggplot() + geom_line(aes(y = population_sum_germany, x = Year),
                 data = total_population_germany)
pgermany

population_poland<-population %>%
  filter(Area=="Poland") 
population_germany
#total population in UK across the years
total_population_poland <- population_poland %>%
  group_by(Year) %>%
  summarize(population_sum_poland = sum(Population))
total_population_poland
total_population
ppoland <- ggplot() + geom_line(aes(y = population_sum_poland, x = Year),
                 data = total_population_poland)
ppoland

#compare population growth in different countries
population_compared<-population %>%
  filter(Area=="Egypt"| Area=="France"| Area=="Turkey"| Area=="Germany"| Area=="Poland") 
population_compared
unique(population_compared$Area)

```

## INSIGHT I
```{r pressure, echo=FALSE}

#choose countries for analysis

#FINAL INSIGHTS, COUNTRIES MAY BE CHANGED LATER, CHART WILL BE UPGRAEDED TO LOOK NICER
# plot, using the aesthetics argument 'colour'
ggplot(data = population_compared, aes(x = Year, y = Population, colour = Area)) + geom_line()+
ggtitle("Change of population across the years for selected countries") 


#and facet wrap
#population growth facet grid. now choose which will be the final and make nicer
population_growth<-ggplot(population_compared) + geom_line(aes(x=Year, y=Population, colour=Area)) +
  facet_wrap(~Area) +
  guides(col=guide_legend(ncol=1))
population_growth 
```

merge datasets

```{r pressure, echo=FALSE}
FAOdataset<-merge(livestock, population)
FAOdataset
FAOdataset$Area <- as.character(FAOdataset$Area)
#colnames(FAOdataset)
#nrow(FAOdataset)
#str(FAOdataset)
#View(FAOdataset)
```



## INSIGHT II
```{r, echo=FALSE}
#View(FAOdataset)
ireland1<-FAOdataset %>%
  filter(Item=="Eggs, hen, in shell (number)")%>%
  filter(Area=="Ireland")
str(ireland1)
## first iterations
#Eggs production across the years and population growth
ireland_plot <- ggplot() + 
   geom_line(aes(Year, Value), ireland1, colour = "red") + 
   geom_line(aes(Year, Population), ireland1, colour = "blue") + 
   #geom_line(aes(Year, z), ireland1, colour = "darkgreen") + 
   xlab("Time") + ylab("value") +
  labs(color = "YOUR LEGEND TITLE")
ireland_plot

#Milk production across the years and population growth
ireland2<-FAOdataset %>%
  filter(Item=="Milk, whole fresh cow")%>%
  filter(Area=="Ireland")
#str(ireland2)
ireland_plot <- ggplot() + 
   geom_line(aes(Year, Value), ireland2, colour = "red") + 
   geom_line(aes(Year, Population), ireland2, colour = "blue") + 
   #geom_line(aes(Year, z), ireland2, colour = "darkgreen") + 
   xlab("Time") + ylab("value") +
  labs(color = "YOUR LEGEND TITLE")
ireland_plot


#Insights 3 second iteration
# Plot the data
plot(ireland2$Year,ireland2$Value,  type ="l", ylab = "", xlab = "Time")
par(new = TRUE)
plot(ireland2$Year,ireland2$Population, type = "l", yaxt = "n", ylab= "", xlab = "", lty = 2)

#Insights 3 final iteration
# Plot the data
plot(ireland1$Year,ireland1$Value,  type ="l", ylab = "", main = "Irish population and Egg production  (in thousands)", xlab = "Time",
     col = "blue")
par(new = TRUE)
plot(ireland1$Year,ireland1$Population, type = "l", xaxt = "n", yaxt = "n", ylab= "", xlab = "", col = "red", lty = 2)
axis(side = 4)
mtext("beaver2 temperature", side = 4, line = 3)
legend("topleft", c("population of Ireland", "Egg production"),
       col = c("blue", "red"), lty = c(1, 2))

#Insights 3 final iteration
# Plot the data
plot(ireland2$Year,ireland2$Value,  type ="l", ylab = "", main = "Irish population and milk production", xlab = "Time",
     col = "blue")
par(new = TRUE)
plot(ireland2$Year,ireland2$Population, type = "l", xaxt = "n", yaxt = "n", ylab= "", xlab = "", col = "red", lty = 2)
axis(side = 4)
mtext("", side = 4, line = 3)
legend("topleft", c("Population of Ireland", "milk production"),
       col = c("blue", "red"), lty = c(1, 2))

```





```{r, echo=FALSE}
#total production of eggs
total_eggs <- eggs_production %>%
  group_by(Year) %>%
  summarize(eggs_sum = sum(Value))


p3 <- ggplot() + geom_line(aes(y = eggs_sum, x = Year),
                 data = total_eggs)
p3
 #production of different items compared / line chart
production_compared<-FAOdataset %>%
  filter(Item=="Meat, chicken"| Item=="Meat, pig") %>%
  group_by(Year, Item) %>%
  summarize(production_sum_total = sum(Value))

#unique(production_compared$Item)
ggplot(data = production_compared, aes(x = Year, y = production_sum_total, colour = Item)) + geom_line()
 #production of different items compared
milk_compared<-FAOdataset %>%
  filter(Item=="Milk, whole fresh cow") %>%
  group_by(Year, Item) %>%
  summarize(production_sum_total = sum(Value))
unique(milk_compared$Item)
ggplot(data = milk_compared, aes(x = Year, y = production_sum_total, colour = Item)) + geom_line()


#facet grid overview pr global production of choosen food items
b<-ggplot(livestock) + geom_line(aes(x=Year, y=Value, colour=Item)) +
  facet_wrap(~Item) +
  guides(col=guide_legend(ncol=1))
b
#this is my insight
p22<-ggplot(production_compared,aes(x=Year,y=production_sum_total,fill=Item))  
p22 + geom_bar(stat='identity') + ggtitle('Production of chicken and Pigs in tonnes') + xlab('Year') + ylab('total production') + theme(plot.title = element_text(hjust = 0.5)) + guides(fill = guide_legend(title='Meat')) 

```
